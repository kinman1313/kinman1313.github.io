// Function to fade out the preloader
function fadeOutPreloader(element, duration) {
  try {
    let opacity = 1;
    function fade() {
      if (opacity <= 0) {
        element.style.zIndex = 0;
        element.style.opacity = 0;
        element.style.filter = "alpha(opacity = 0)";
        document.documentElement.style.overflowY = "auto";
        document.getElementById("preloader").remove();
      } else {
        opacity -= 0.1;
        setOpacity(element, opacity);
        requestAnimationFrame(fade);
      }
    }
    fade();
  } catch (error) {
    console.error("Error in fadeOutPreloader: ", error);
  }
}

// Helper function to set opacity
function setOpacity(element, opacity) {
  element.style.opacity = opacity;
  element.style.filter = "alpha(opacity = " + (100 * opacity) + ")";
}

// Set a timeout to fade out the preloader
setTimeout(() => {
  fadeOutPreloader(document.getElementById("preloader"), 69);
}, 1500);

$(document).ready(() => {
  $(window).on("beforeunload", () => {
    window.scrollTo(0, 0);
  });
  particlesJS.load("landing", "assets/particles.json", () => {});

  const txtRotateElement = document.getElementById("txt-rotate");
  const rotateData = txtRotateElement.getAttribute("data-rotate");
  const rotatePeriod = txtRotateElement.getAttribute("data-period");

  setTimeout(() => {
    new TxtRotate(txtRotateElement, JSON.parse(rotateData), rotatePeriod);
  }, 1500);

  const style = document.createElement("style");
  style.type = "text/css";
  style.innerHTML = "#txt-rotate > .wrap { border-right: 0.08em solid #666 }";
  document.body.appendChild(style);

  AOS.init({
    disable: "mobile",
    offset: 200,
    duration: 600,
    easing: "ease-in-sine",
    delay: 100,
    once: true
  });

  randomizeOrder();
});

// Constructor function for text rotation
function TxtRotate(element, toRotate, period) {
  this.toRotate = toRotate;
  this.el = element;
  this.loopNum = 0;
  this.period = parseInt(period, 10) || 2000;
  this.txt = "";
  this.isDeleting = false;
  this.tick();
}

// Function to handle text rotation
TxtRotate.prototype.tick = function () {
  const i = this.loopNum % this.toRotate.length;
  const fullTxt = this.toRotate[i];

  this.txt = this.isDeleting ? fullTxt.substring(0, this.txt.length - 1) : fullTxt.substring(0, this.txt.length + 1);
  this.el.innerHTML = '<span class="wrap">' + this.txt + '</span>';

  let delta = 200 - Math.random() * 100;

  if (this.isDeleting) {
    delta /= 5;
  }

  if (!this.isDeleting && this.txt === fullTxt) {
    delta = this.period;
    this.isDeleting = true;
  } else if (this.isDeleting && this.txt === "") {
    this.isDeleting = false;
    this.loopNum++;
    delta = 500;
  }

  setTimeout(() => {
    this.tick();
  }, delta);
};

// Function to randomize the order of skill elements
function randomizeOrder() {
  const skills = document.getElementById("skills");
  const elements = skills.getElementsByTagName("div");
  const fragment = document.createDocumentFragment();

  while (elements.length) {
    fragment.appendChild(elements[Math.floor(Math.random() * elements.length)]);
  }

  skills.appendChild(fragment);
}
